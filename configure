#!/usr/bin/env bash

CC="${CC:-cc}"
AR="${AR:-ar}"
PREFIX="${PREFIX:-/usr/local}"
CFLAGS="-Ofast -march=native -mtune=native -std=gnu99 $CFLAGS"

with_fftw=true
with_libjpeg=true
with_libpng=true
with_mjpegtools=true
with_MagicWand=true

function usage() {
	echo "./configure --opt=arg"
	echo ""
	echo "   --cc           \"$CC\""
	echo "   --ar           \"$AR\""
	echo "   --cflags       \"$CFLAGS\""
	echo "   --prefix       \"$PREFIX\""
	echo "   --binprefix    \"$PREFIX/bin\""
	echo "   --libprefix    \"$PREFIX/lib\""
	echo "   --incprefix    \"$PREFIX/include\""
	echo "   --pcprefix     \"$PREFIX/lib/pkgconfig\""
	echo ""
	echo "   --disable-fftw"
	echo "   --disable-libjpeg"
	echo "   --disable-libpng"
	echo "   --disable-mjpegtools"
	echo "   --disable-MagickWand"
	echo "   --disable-everything"
	echo ""
	echo "   --default-range [n] (12)"
	echo "   --coeff-precision [4|8|12] (4)"
	echo "   --inter-precision [4|8|12] (8)"
	echo "   --pixel-max (SIZE_MAX)"
	exit 0
}

for o; do
	opt="${o%%=*}"
	arg="${o#*=}"
	case "$opt" in
		--cc) CC="$arg";;
		--ar) AR="$arg";;
		--cflags) CFLAGS="$arg";;
		--prefix) PREFIX="$arg";;
		--binprefix)   BINPREFIX="$arg";;
		--libprefix)   LIBPREFIX="$arg";;
		--incprefix)   INCPREFIX="$arg";;
		--disable-fftw      ) with_fftw=false;;
		--disable-libjpeg   ) with_libjpeg=false;;
		--disable-libpng    ) with_libpng=false;;
		--disable-mjpegtools) with_mjpegtools=false;;
		--disable-MagickWand) with_MagickWand=false;;
		--disable-everything) with_fftw=false; with_libjpeg=false; with_libpng=false; with_mjpegtools=false; with_MagickWand=false;;
		--default-range) DEFAULT_RANGE=$arg;;
		--coeff-precision) COEFF_PRECISION=$arg;;
		--inter-precision) INTER_PRECISION=$arg;;
		--pixel-max) PIXEL_MAX=$arg;;
		--help) usage;;
	esac
done

BINPREFIX="${BINPREFIX:-$PREFIX/bin}"
LIBPREFIX="${LIBPREFIX:-$PREFIX/lib}"
INCPREFIX="${INCPREFIX:-$PREFIX/include}"
PCPREFIX="${PCPREFIX:-$PREFIX/lib/pkgconfig}"

function abort() {
	echo "${1:-Aborting}"
	rm -f config.mak
	exit 1
}
function testinc() {
	printf "Testing for $1..."
	target=""
	for arg; do target="-include $arg $target"; done
	if $CC $CFLAGS -xc -fsyntax-only $target - <<< "" &> /dev/null; then
		printf " ok\n"
		return 0
	fi
	printf " not found\n"
	return 1
}
function testlib() {
	printf "Testing for $1..."
	target=""
	for arg; do target="-l$arg $target"; done
	if $CC $CFLAGS -xc $target -o /dev/null - <<< "int main(void){};" &> /dev/null; then
		printf " ok\n"
		return 0
	fi
	printf " not found\n"
	return 1
}
function testpc() {
	printf "Testing for $1..."
	if pkg-config --exists $1; then
		printf " ok\n"
		return 0
	fi
	printf " not found\n"
	return 1
}
function testbin() {
	printf "Testing for $1..."
	if command -v "$1" &> /dev/null; then
		printf " ok\n"
		return 0
	fi
	printf " not found\n"
	return 1
}
function define() {
	echo "$1 is \"$2\""
	echo "$1=$2" >> config.mak
}
function expand() {
	echo "Generating $2"
	while read line; do
		eval printf \"%s\\n\" \"$line\"
	done < "$1" > "$2"
}
function pcver() {
	ver="$(pkg-config --modversion "$1")"
	echo ${ver%%.*}
}

testbin "$CC" || abort
testbin "$AR" || abort
if $with_libpng || $with_mjpegtools || $with_MagickWand || $with_fftw; then
	testbin pkg-config || abort "configuration depends on pkg-config (http://www.freedesktop.org/wiki/Software/pkg-config/)"
fi

echo

rm -f config.mak

define CC "$(command -v "$CC")"
define AR "$(command -v "$AR")"
define CFLAGS "$CFLAGS"
define PREFIX "$PREFIX"
define BINPREFIX "$BINPREFIX"
define LIBPREFIX "$LIBPREFIX"
define INCPREFIX "$INCPREFIX"
define PCPREFIX "$PCPREFIX"
[ -n "$DEFAULT_RANGE" ] && define DEFAULT_RANGE "$DEFAULT_RANGE"
[ -n "$COEFF_PRECISION" ] && define COEFF_PRECISION "$COEFF_PRECISION"
[ -n "$INTER_PRECISION" ] && define INTER_PRECISION "$INTER_PRECISION"
[ -n "$PIXEL_MAX" ] && define PIXEL_MAX "$PIXEL_MAX"

echo

DEFS=
LIBS=
PCDEPS=

lfftw="fftw3f"
case "$COEFF_PRECISION" in
	8)  lfftw="fftw3";  DEFS+=" -Dkiss_fft_scalar=double";;
	12) lfftw="fftw3l"; DEFS+=" -Dkiss_fft_scalar=double";;
esac

if $with_fftw && testpc $lfftw; then
	DEFS+=" -DHAVE_FFTW=$(pcver $lfftw)"
	PCDEPS+=" $lfftw"
fi

if $with_libjpeg && testinc jpeglib.h stddef.h stdio.h && testlib jpeg; then
	echo "HAVE_LIBJPEG=1" >> config.mak
	DEFS+=" -DHAVE_LIBJPEG"
	LIBS+=" -ljpeg"
fi

for dep in libpng mjpegtools MagickWand; do
	check=with_$dep
	if ${!check} && testpc $dep; then
		name="$(tr '[a-z]' '[A-Z]' <<< $dep)"
		ver="$(pcver $dep)"
		echo "HAVE_$name=$ver" >> config.mak
		DEFS+=" -DHAVE_$name=$ver"
		PCDEPS+=" $dep"
	fi
done

testlib m && LIBS+=" -lm"

echo

expand lib/resdet.pc.in lib/resdet.pc

if [ -n "$PCDEPS" ]; then
	DEFS+=" $(pkg-config --cflags $PCDEPS 2> /dev/null)"
	LIBS+=" $(pkg-config --libs $PCDEPS 2> /dev/null)"
fi

echo "DEFS=$DEFS" >> config.mak
echo "LIBS=$LIBS" >> config.mak

if [[ "$DEFS" = *HAVE_MAGICKWAND* && ("$DEFS" = *HAVE_LIBPNG* || "$DEFS" = *HAVE_LIBJPEG*) ]]; then
	echo "Note: building both MagickWand and libjpeg/png support. To read JPEGs and PNGs using ImageMagick, configure with --disable-libpng --disable-libjpeg"
fi
